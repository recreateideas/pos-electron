{"version":3,"sources":["modules/fetcher/handlers.js","redux/store/initialState.js","modules/fetcher/index.js","modules/fetcher/fetcher.js","redux/actions/data/types.js","redux/actions/data/actions.js","redux/reducers/index.js","redux/reducers/data.js","redux/store/store.js","redux/store/index.js","redux/selectors/data.js","redux/index.js","utils/services-healthcheck.js","hooks/use-health-check.js","features/Order/styledComponents.js","ui-core/Header/styledComponents.js","ui-core/Header/Header.jsx","ui-core/Header/index.js","ui-core/Counter/styledComponents.js","ui-core/Counter/Counter.jsx","ui-core/Counter/index.js","features/Order/Order.jsx","features/Order/index.js","features/Products/styledComponents.js","features/Products/Products.jsx","features/Products/index.js","features/Shop/styledComponents.js","features/Shop/Shop.jsx","redux/custom-hooks/use-selector.js","features/Shop/index.js","App.jsx","index.js","modules/fetcher/defaults.js"],"names":["module","exports","errorHandler","err","status","response","data","responseHandler","res","initialState","fetcher","args","a","url","method","defaults","headers","params","axios","types","SET_USER","GET_PRODUCTS_PENDING","GET_PRODUCTS_ERROR","GET_PRODUCTS_SUCCESS","getProducts","dispatch","getState","products","type","config","error","message","reducers","state","action","slices","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","middlewares","applyMiddleware","thunk","store","createStore","request","require","services","name","endpoint","maxRetries","servicesHealthcheck","Promise","allSettled","map","service","resolve","reject","triesCount","check","setInterval","body","statusCode","running","clearInterval","checks","healthy","Object","values","every","c","useHealthCheck","useState","isHealthy","setIsHealthy","useEffect","result","healthCheck","Container","styled","div","Category","thead","Row","tr","Col","Cart","table","ScrollContainer","Title","Header","props","title","displayName","defaultProps","Button","button","Value","Counter","value","onChange","update","add","remove","onClick","Order","useReducer","oldState","orderStatus","addToOrder","console","log","keys","categoryName","j","category","items","categoryLabel","label","className","item","i","id","price","countValue","itemValue","count","Math","max","ImageContainer","Image","img","BSCol","BSRow","Label","Products","bootstrap","xs","md","lg","imageUrl","alt","src","Shop","useDispatch","actions","fn","equalityFn","isEqual","useReactReduxSelector","useSelector","selectors","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26ab9d3c.chunk.js","sourcesContent":["const errorHandler = err => {\n    return {\n        status: err.response ? err.response.status : err.status,\n        data: err.response ? err.response.data : err.data\n    };\n};\n\nconst responseHandler = (res = {}) => {\n    return {\n        status: res.status,\n        data: res.data\n    };\n};\n\nmodule.exports = { errorHandler, responseHandler };\n","const initialState = {\n    data: {}\n};\n\nexport default initialState;\n","import fetcher from './fetcher';\n\nexport default fetcher;\n","import axios from 'axios';\nimport defaults from './defaults';\n\nconst fetcher = async args => {\n    const {\n        url,\n        data,\n        method = defaults.method,\n        headers = defaults.headers,\n        errorHandler = defaults.errorHandler,\n        responseHandler = defaults.responseHandler\n    } = args;\n    const params = { method, headers, data };\n    let response;\n    try {\n        response = await axios(url, params);\n        return responseHandler(response);\n    } catch (err) {\n        return errorHandler(err);\n    }\n};\n\nexport default fetcher;\n","const types = {\n    SET_USER: 'SET_USER',\n    GET_PRODUCTS_PENDING: 'GET_PRODUCTS_PENDING',\n    GET_PRODUCTS_ERROR: 'GET_PRODUCTS_ERROR',\n    GET_PRODUCTS_SUCCESS: 'GET_PRODUCTS_SUCCESS'\n};\n\nexport default types;\n","import { fetcher } from '../../../modules';\nimport types from './types';\n\nconst getProducts = () => async (dispatch, getState) => {\n    const {\n        data: { products }\n    } = getState();\n    dispatch({\n        type: types.GET_PRODUCTS_PENDING\n    });\n    const config = {\n        url: `http://localhost:2999/products`,\n        errorHandler: error => {\n            dispatch({\n                type: types.GET_PRODUCTS_ERROR,\n                data: { message: error.message }\n            });\n        },\n        responseHandler: response => {\n            dispatch({\n                type: types.GET_PRODUCTS_SUCCESS,\n                data: { products: response?.data?.products }\n            });\n        }\n    };\n    if (!products) {\n        await fetcher(config);\n    }\n};\n\nexport { getProducts };\n","import data from './data';\n\nconst reducers = {\n    data\n};\n\nexport default reducers;\n","import initialState from '../store/initialState';\nimport { types } from '../actions/data';\n\nconst auth = (state = initialState.data, action) => {\n    const { type, data } = action;\n    switch (type) {\n        case types.GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                products: data.products\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst slices = combineReducers(reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          trace: true,\n          traceLimit: 25\n      })\n    : compose;\n\nconst middlewares = [applyMiddleware(thunk)];\n\nconst store = createStore(slices, composeEnhancers(...middlewares));\n\nexport default store;\n","import store from './store';\n\nexport default store;\n","const products = state => state.data.products;\n\nexport { products };\n","import store from './store';\nimport { useDispatch } from 'react-redux';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { useSelector } from './custom-hooks';\n\nexport default store;\n\nexport { useDispatch, actions, useSelector, selectors };\n","const request = require('request');\n\nconst services = [\n    {\n        name: 'data-service',\n        endpoint: 'http://127.0.0.1:2999/health',\n        maxRetries: 10\n    }\n    // add other services here to perform healthchecks\n];\nconst servicesHealthcheck = async () => {\n    const checks = await Promise.allSettled(\n        services.map(service => {\n            const { name, endpoint, maxRetries } = service;\n            return new Promise((resolve, reject) => {\n                let triesCount = 1;\n                const check = setInterval(() => {\n                    request(endpoint, (error, response, body) => {\n                        if (!error && response.statusCode === 200) {\n                            resolve({ [name]: { endpoint, running: true } });\n                            clearInterval(check);\n                        }\n                        if (triesCount === maxRetries) {\n                            reject({ [name]: { endpoint, running: false } });\n                        }\n                        triesCount++;\n                    });\n                }, 1000);\n            });\n        })\n    );\n    const healthy = Object.values(checks).every(c => c.status === 'fulfilled');\n    return healthy;\n};\n\nexport default servicesHealthcheck;\n","import { useState, useEffect } from 'react';\nimport { servicesHealthcheck } from '../utils';\n\nconst useHealthCheck = () => {\n    const [isHealthy, setIsHealthy] = useState(false);\n    useEffect(() => {\n        async function healthCheck() {\n            const result = await servicesHealthcheck();\n            setIsHealthy(result);\n        }\n        healthCheck();\n    }, []);\n    return isHealthy;\n};\n\nexport default useHealthCheck;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100%;\n`;\n\nconst Category = styled.thead`\n    font-weight: 600;\n`;\n\nconst Row = styled.tr`\n    display: flex;\n    padding: 16px 0;\n`;\nconst Col = styled.tr`\n    padding: 0 4px;\n    &.counter {\n        width: 25%;\n    }\n    &.item-label {\n        width: 65%;\n    }\n    &.price {\n        width: 10%;\n    }\n`;\n\nconst Cart = styled.table`\n    width: 100%;\n    height: 100%;\n`;\n\nconst ScrollContainer = styled.div`\n    height: 100%;\n    overflow-y: auto;\n`;\n\nexport { Container, ScrollContainer, Cart, Category, Row, Col };\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n    padding: 16px;\n    background-color: #6b5b95;\n`;\n\nconst Title = styled.div`\n    margin: auto;\n    color: white;\n`;\n\nexport { Container, Title };\n","import PropTypes from 'prop-types';\nimport { Container, Title } from './styledComponents';\n\nconst Header = props => {\n    const { title } = props;\n    return (\n        <Container>\n            <Title>{title}</Title>\n        </Container>\n    );\n};\n\nHeader.displayName = 'Header';\n\nHeader.defaultProps = {};\n\nHeader.propTypes = {\n    title: PropTypes.string\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Button = styled.button`\n    border: none;\n    height: 32px;\n    width: 32px;\n    border-radius: 8px;\n    :hover,\n    :active {\n        background-color: rgba(0, 0, 0, 0.15);\n    }\n`;\n\nconst Value = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0 4px;\n`;\n\nexport { Container, Button, Value };\n","import PropTypes from 'prop-types';\nimport { Container, Button, Value } from './styledComponents';\n\nconst Counter = props => {\n    const { value, onChange } = props;\n    const update = action => () => {\n        const map = {\n            add: value + 1,\n            remove: value - 1\n        };\n        onChange(map[action]);\n    };\n    return (\n        <Container>\n            <Button {...{ onClick: update('remove') }}>-</Button>\n            <Value>{value}</Value>\n            <Button {...{ onClick: update('add') }}>+</Button>\n        </Container>\n    );\n};\n\nCounter.displayName = 'Counter';\n\nCounter.defaultProps = {};\n\nCounter.propTypes = {\n    value: PropTypes.number,\n    onChange: PropTypes.func\n};\n\nexport default Counter;\n","import Counter from './Counter';\n\nexport default Counter;\n","import { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Container,\n    ScrollContainer,\n    Cart,\n    Category,\n    Row,\n    Col\n} from './styledComponents';\nimport { Header, Counter } from '../../ui-core';\n\nconst Order = props => {\n    const { products } = props;\n    const [orderStatus, addToOrder] = useReducer((oldState, update) => {\n        if (update) {\n            return {\n                ...oldState,\n                ...update\n            };\n        }\n        return undefined;\n    }, {});\n    console.log(orderStatus);\n    return (\n        <Container>\n            <Header {...{ title: 'Order' }} />\n            <ScrollContainer>\n                {Object.keys(products).map((categoryName, j) => {\n                    const category = products[categoryName];\n                    const { items, label: categoryLabel } = category;\n                    return (\n                        <Cart key={j}>\n                            <Category>{categoryLabel}</Category>\n                            <tbody className=\"category\">\n                                {items.map((item, i) => {\n                                    const { name, id, price } = item;\n                                    const { countValue = 0, itemValue = 0 } =\n                                        orderStatus[id] || {};\n                                    const onChange = count =>\n                                        addToOrder({\n                                            [id]: {\n                                                countValue: Math.max(0, count),\n                                                itemValue:\n                                                    price * Math.max(0, count)\n                                            }\n                                        });\n                                    return (\n                                        <Row className=\"order-row\" key={i}>\n                                            <Col className=\"counter\">\n                                                <Counter\n                                                    {...{\n                                                        value: countValue,\n                                                        onChange\n                                                    }}\n                                                />\n                                            </Col>\n                                            <Col className=\"item-label\">\n                                                <div>{name}</div>\n                                            </Col>\n                                            <Col className=\"price\">\n                                                <div className=\"price\">\n                                                    ${itemValue}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                    );\n                                })}\n                            </tbody>\n                        </Cart>\n                    );\n                })}\n            </ScrollContainer>\n        </Container>\n    );\n};\n\nOrder.displayName = 'Order';\n\nOrder.propTypes = {\n    products: PropTypes.object\n};\n\nexport default Order;\n","import Order from './Order';\n\nexport default Order;\n","import styled from 'styled-components';\nimport { Col, Row } from 'react-bootstrap';\n\nconst Container = styled.div`\n    height: 100%;\n    border-right: solid 1px grey;\n`;\n\nconst Category = styled.div``;\n\nconst ImageContainer = styled.div`\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    width: 100%;\n    border-radius: 6px;\n    padding: 8px;\n    :hover {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n`;\n\nconst Image = styled.img`\n    height: 9rem;\n    width: 9rem;\n    margin: auto;\n    border-radius: 6px;\n`;\n\nconst BSCol = styled(Col)`\n    flex-grow: 0;\n    margin: 24px 0;\n    display: flex;\n    justify-content: flex-start;\n`;\n\nconst BSRow = styled(Row)``;\n\nconst Label = styled.div`\n    text-align: center;\n`;\n\nexport { ImageContainer, Container, Category, Image, BSCol, BSRow, Label };\n","import PropTypes from 'prop-types';\nimport { Container as BSContainer } from 'react-bootstrap';\nimport { Header } from '../../ui-core';\nimport {\n    ImageContainer,\n    Container,\n    Category,\n    Image,\n    BSCol,\n    BSRow,\n    Label\n} from './styledComponents';\n\nconst Products = props => {\n    const { products } = props;\n    const bootstrap = {\n        xs: 6,\n        md: 4,\n        lg: 3\n    };\n    return (\n        <Container>\n            <Header {...{ title: 'Products' }} />\n            {Object.keys(products).map((categoryName, j) => {\n                const category = products[categoryName];\n                const { items } = category;\n                return (\n                    <BSContainer key={j}>\n                        <Category>\n                            <BSRow>\n                                {items.map((item, i) => {\n                                    const { name, price, imageUrl } = item;\n                                    return (\n                                        <BSCol key={i} {...bootstrap}>\n                                            <ImageContainer>\n                                                <Image\n                                                    alt={name}\n                                                    src={imageUrl}\n                                                />\n                                                <Label>{name}</Label>\n                                                <Label className=\"price\">\n                                                    ${price}\n                                                </Label>\n                                            </ImageContainer>\n                                        </BSCol>\n                                    );\n                                })}\n                            </BSRow>\n                        </Category>\n                    </BSContainer>\n                );\n            })}\n        </Container>\n    );\n};\n\nProducts.displayName = 'Products';\n\nProducts.propTypes = {\n    products: PropTypes.object\n};\n\nexport default Products;\n","import Products from './Products';\n\nexport default Products;\n","import styled from 'styled-components';\nimport { Col, Row } from 'react-bootstrap';\n\nconst Container = styled.div`\n    display: flex;\n    height: 100%;\n`;\n\nconst BSCol = styled(Col)`\n    padding: 0%;\n    overflow: hidden;\n    height: 100%;\n`;\n\nconst BSRow = styled(Row)`\n    border: solid 1px grey;\n    height: 100%;\n`;\n\nexport { Container, BSCol, BSRow };\n","import { useEffect } from 'react';\nimport { Container as BSContainer } from 'react-bootstrap';\nimport { useDispatch, actions, useSelector, selectors } from '../../redux';\nimport { Order, Products } from '../../features';\nimport { Container, BSCol, BSRow } from './styledComponents';\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n    const {\n        data: { getProducts }\n    } = actions;\n    const { data: dataSelectors } = selectors;\n    const products = useSelector(dataSelectors.products);\n    useEffect(() => {\n        dispatch(getProducts());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [products]);\n    return products ? (\n        <Container>\n            <BSContainer>\n                <BSRow>\n                    <BSCol {...{ md: 12, lg: 8 }}>\n                        <Products {...{ products }} />\n                    </BSCol>\n                    <BSCol {...{ md: 12, lg: 4 }}>\n                        <Order {...{ products }} />\n                    </BSCol>\n                </BSRow>\n            </BSContainer>\n        </Container>\n    ) : (\n        <div>loading products...</div>\n    );\n};\n\nShop.displayName = 'Shop';\n\nShop.defaultProps = {};\n\nShop.propTypes = {};\n\nexport default Shop;\n","import { useSelector as useReactReduxSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\n\nconst useSelector = (fn, rerenderOnChange = true) => {\n    const equalityFn = rerenderOnChange ? isEqual : () => true;\n    return useReactReduxSelector(fn, equalityFn);\n};\n\nexport { useSelector };\n","import Shop from './Shop';\n\nexport default Shop;\n","import useHealthCheck from './hooks/use-health-check';\nimport { Shop } from './features';\n\nfunction App() {\n    const isHealthy = useHealthCheck();\n    return (\n        <div id=\"app\">{isHealthy ? <Shop /> : 'checking apps health...'}</div>\n    );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './roboto.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","const { errorHandler, responseHandler } = require('./handlers');\n\nconst defaults = {\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    errorHandler,\n    responseHandler\n};\n\nmodule.exports = defaults;\n"],"sourceRoot":""}