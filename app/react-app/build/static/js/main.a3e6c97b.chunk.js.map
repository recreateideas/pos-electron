{"version":3,"sources":["modules/fetcher/handlers.js","redux/store/initialState.js","modules/fetcher/index.js","modules/fetcher/fetcher.js","redux/actions/data/types.js","redux/actions/data/actions.js","redux/reducers/index.js","redux/reducers/data.js","redux/store/store.js","redux/store/index.js","redux/selectors/data.js","redux/index.js","features/Order/styledComponents.js","features/Order/Order.jsx","features/Order/index.js","features/Products/styledComponents.js","features/Products/Products.jsx","redux/custom-hooks/use-selector.js","features/Products/index.js","utils/services-healthcheck.js","hooks/use-health-check.js","App.jsx","index.js","modules/fetcher/defaults.js"],"names":["module","exports","errorHandler","err","status","response","data","responseHandler","res","initialState","fetcher","args","a","url","method","defaults","headers","params","axios","types","SET_USER","GET_PRODUCTS_PENDING","GET_PRODUCTS_ERROR","GET_PRODUCTS_SUCCESS","getProducts","dispatch","getState","products","type","config","error","message","reducers","state","action","slices","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","middlewares","applyMiddleware","thunk","store","createStore","Container","styled","div","props","theme","css","Order","displayName","Category","ImageContainer","Image","img","BSCol","Col","BSRow","Row","Label","Products","useDispatch","actions","fn","equalityFn","isEqual","useReactReduxSelector","useSelector","selectors","useEffect","console","log","bootstrap","xs","md","lg","Object","keys","map","categoryName","items","item","name","price","imageUrl","alt","src","request","require","services","endpoint","maxRetries","servicesHealthcheck","Promise","allSettled","service","resolve","reject","triesCount","check","setInterval","body","statusCode","running","clearInterval","checks","healthy","values","every","c","useHealthCheck","useState","isHealthy","setIsHealthy","result","healthCheck","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3e6c97b.chunk.js","sourcesContent":["const errorHandler = err => {\n    return {\n        status: err.response ? err.response.status : err.status,\n        data: err.response ? err.response.data : err.data\n    };\n};\n\nconst responseHandler = (res = {}) => {\n    return {\n        status: res.status,\n        data: res.data\n    };\n};\n\nmodule.exports = { errorHandler, responseHandler };\n","const initialState = {\n    data: {}\n};\n\nexport default initialState;\n","import fetcher from './fetcher';\n\nexport default fetcher;\n","import axios from 'axios';\nimport defaults from './defaults';\n\nconst fetcher = async args => {\n    const {\n        url,\n        data,\n        method = defaults.method,\n        headers = defaults.headers,\n        errorHandler = defaults.errorHandler,\n        responseHandler = defaults.responseHandler\n    } = args;\n    const params = { method, headers, data };\n    let response;\n    try {\n        response = await axios(url, params);\n        return responseHandler(response);\n    } catch (err) {\n        return errorHandler(err);\n    }\n};\n\nexport default fetcher;\n","const types = {\n    SET_USER: 'SET_USER',\n    GET_PRODUCTS_PENDING: 'GET_PRODUCTS_PENDING',\n    GET_PRODUCTS_ERROR: 'GET_PRODUCTS_ERROR',\n    GET_PRODUCTS_SUCCESS: 'GET_PRODUCTS_SUCCESS'\n};\n\nexport default types;\n","import { fetcher } from '../../../modules';\nimport types from './types';\n\nconst getProducts = () => async (dispatch, getState) => {\n    const {\n        data: { products }\n    } = getState();\n    dispatch({\n        type: types.GET_PRODUCTS_PENDING\n    });\n    const config = {\n        url: `http://localhost:2999/products`,\n        errorHandler: error => {\n            dispatch({\n                type: types.GET_PRODUCTS_ERROR,\n                data: { message: error.message }\n            });\n        },\n        responseHandler: response => {\n            dispatch({\n                type: types.GET_PRODUCTS_SUCCESS,\n                data: { products: response?.data?.products }\n            });\n        }\n    };\n    if (!products) {\n        await fetcher(config);\n    }\n};\n\nexport { getProducts };\n","import data from './data';\n\nconst reducers = {\n    data\n};\n\nexport default reducers;\n","import initialState from '../store/initialState';\nimport { types } from '../actions/data';\n\nconst auth = (state = initialState.data, action) => {\n    const { type, data } = action;\n    switch (type) {\n        case types.GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                products: data.products\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst slices = combineReducers(reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          trace: true,\n          traceLimit: 25\n      })\n    : compose;\n\nconst middlewares = [applyMiddleware(thunk)];\n\nconst store = createStore(slices, composeEnhancers(...middlewares));\n\nexport default store;\n","import store from './store';\n\nexport default store;\n","const products = state => state.data.products;\n\nexport { products };\n","import store from './store';\nimport { useDispatch } from 'react-redux';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { useSelector } from './custom-hooks';\n\nexport default store;\n\nexport { useDispatch, actions, useSelector, selectors };\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n    ${props => {\n        const {\n            theme: {}\n        } = props;\n        return css``;\n    }}\n`;\n\nexport { Container };\n","import React from 'react';\nimport { Container } from './styledComponents';\n\nconst Order = props => {\n    return <Container>Order</Container>;\n};\n\nOrder.displayName = 'Order';\n\nexport default Order;\n","import Order from './Order';\n\nexport default Order;\n","import styled from 'styled-components';\nimport { Col, Row } from 'react-bootstrap';\n\nconst Container = styled.div``;\n\nconst Category = styled.div``;\n\nconst ImageContainer = styled.div`\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    :hover {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n`;\n\nconst Image = styled.img`\n    height: 100px;\n    width: 100px;\n`;\n\nconst BSCol = styled(Col)`\n    flex-grow: 0;\n    margin: 24px 0;\n    display: flex;\n    justify-content: flex-start;\n`;\n\nconst BSRow = styled(Row)``;\n\nconst Label = styled.div``;\n\nexport { ImageContainer, Container, Category, Image, BSCol, BSRow, Label };\n","import React, { useEffect } from 'react';\nimport { Container as BSContainer } from 'react-bootstrap';\nimport { useDispatch, actions, useSelector, selectors } from '../../redux';\nimport {\n    ImageContainer,\n    Container,\n    Category,\n    Image,\n    BSCol,\n    BSRow,\n    Label\n} from './styledComponents';\n\nconst Products = props => {\n    const dispatch = useDispatch();\n    const {\n        data: { getProducts }\n    } = actions;\n    const { data: dataSelectors } = selectors;\n    const products = useSelector(dataSelectors.products);\n    useEffect(() => {\n        dispatch(getProducts());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [products]);\n    console.log(products);\n    const bootstrap = {\n        xs: 6,\n        md: 4,\n        lg: 2\n    };\n    return products ? (\n        <Container>\n            {Object.keys(products).map(categoryName => {\n                const category = products[categoryName];\n                const { items } = category;\n                return (\n                    <BSContainer>\n                        <Category>\n                            <BSRow>\n                                {items.map(item => {\n                                    const { name, price, imageUrl } = item;\n                                    return (\n                                        <BSCol {...bootstrap}>\n                                            <ImageContainer>\n                                                <Image\n                                                    alt={name}\n                                                    src={imageUrl}\n                                                />\n                                                <Label>\n                                                    {name} - ${price}\n                                                </Label>\n                                            </ImageContainer>\n                                        </BSCol>\n                                    );\n                                })}\n                            </BSRow>\n                        </Category>\n                    </BSContainer>\n                );\n            })}\n        </Container>\n    ) : (\n        <div>loading products...</div>\n    );\n};\n\nProducts.displayName = 'Products';\n\nexport default Products;\n","import { useSelector as useReactReduxSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\n\nconst useSelector = (fn, rerenderOnChange = true) => {\n    const equalityFn = rerenderOnChange ? isEqual : () => true;\n    return useReactReduxSelector(fn, equalityFn);\n};\n\nexport { useSelector };\n","import Products from './Products';\n\nexport default Products;\n","const request = require('request');\n\nconst services = [\n    {\n        name: 'data-service',\n        endpoint: 'http://127.0.0.1:2999/health',\n        maxRetries: 10\n    }\n    // add other services here to perform healthchecks\n];\nconst servicesHealthcheck = async () => {\n    const checks = await Promise.allSettled(\n        services.map(service => {\n            const { name, endpoint, maxRetries } = service;\n            return new Promise((resolve, reject) => {\n                let triesCount = 1;\n                const check = setInterval(() => {\n                    request(endpoint, (error, response, body) => {\n                        console.log(response);\n                        if (!error && response.statusCode === 200) {\n                            console.log(response.body);\n                            resolve({ [name]: { endpoint, running: true } });\n                            clearInterval(check);\n                        }\n                        if (triesCount === maxRetries) {\n                            reject({ [name]: { endpoint, running: false } });\n                        }\n                        triesCount++;\n                    });\n                }, 1000);\n            });\n        })\n    );\n    const healthy = Object.values(checks).every(c => c.status === 'fulfilled');\n    return healthy;\n};\n\nexport default servicesHealthcheck;\n","import { useState, useEffect } from 'react';\nimport { servicesHealthcheck } from '../utils';\n\nconst useHealthCheck = () => {\n    const [isHealthy, setIsHealthy] = useState(false);\n    useEffect(() => {\n        async function healthCheck() {\n            const result = await servicesHealthcheck();\n            setIsHealthy(result);\n        }\n        healthCheck();\n    }, []);\n    return isHealthy;\n};\n\nexport default useHealthCheck;\n","import { Order, Products } from './features';\nimport useHealthCheck from './hooks/use-health-check';\n\nfunction App() {\n    const isHealthy = useHealthCheck();\n    return (\n        <div className=\"App\">\n            {isHealthy ? (\n                <>\n                    <Products />\n                    <Order />\n                </>\n            ) : (\n                'checking apps health...'\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","const { errorHandler, responseHandler } = require('./handlers');\n\nconst defaults = {\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    errorHandler,\n    responseHandler\n};\n\nmodule.exports = defaults;\n"],"sourceRoot":""}