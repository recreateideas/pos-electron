{"version":3,"sources":["modules/fetcher/handlers.js","redux/store/initialState.js","modules/fetcher/index.js","modules/fetcher/fetcher.js","redux/actions/data/types.js","redux/actions/data/actions.js","redux/reducers/index.js","redux/reducers/data.js","redux/store/store.js","redux/store/index.js","redux/selectors/data.js","redux/custom-hooks/use-selector.js","redux/index.js","utils/services-healthcheck.js","hooks/use-health-check.js","ui-core/Header/styledComponents.js","ui-core/Header/Header.jsx","ui-core/Header/index.js","ui-core/Counter/styledComponents.js","ui-core/Counter/Counter.jsx","ui-core/Counter/index.js","ui-core/Loader/styledComponents.js","ui-core/Loader/Loader.jsx","ui-core/Loader/index.js","features/Order/styledComponents.js","features/Order/Checkout/styledComponents.js","features/Order/Checkout/Checkout.jsx","features/Order/Checkout/index.js","features/Order/Basket/styledComponents.js","features/Order/Basket/Basket.jsx","features/Order/Basket/index.js","features/Order/Order.jsx","features/Order/index.js","features/Products/styledComponents.js","features/Products/Products.jsx","features/Products/index.js","features/Shop/styledComponents.js","features/Shop/Shop.jsx","features/Shop/index.js","App.jsx","index.js","modules/fetcher/defaults.js"],"names":["module","exports","errorHandler","err","status","response","data","responseHandler","res","initialState","fetcher","args","a","url","method","defaults","headers","params","console","log","axios","types","SET_USER","GET_PRODUCTS_PENDING","GET_PRODUCTS_ERROR","GET_PRODUCTS_SUCCESS","CHECKOUT_PENDING","CHECKOUT_ERROR","CHECKOUT_SUCCESS","getProducts","dispatch","getState","products","type","config","error","message","checkout","orderStatus","reducers","state","action","isCheckoutPending","isCheckoutCompleted","slices","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","middlewares","applyMiddleware","thunk","store","createStore","useSelector","fn","rerenderOnChange","equalityFn","isEqual","useReactReduxSelector","request","require","services","name","endpoint","maxRetries","servicesHealthcheck","Promise","allSettled","map","service","resolve","reject","triesCount","check","setInterval","body","statusCode","running","clearInterval","checks","healthy","Object","values","every","c","useHealthCheck","useState","isHealthy","setIsHealthy","useEffect","result","healthCheck","Container","styled","div","Title","Header","props","title","className","displayName","defaultProps","Button","button","Value","Counter","value","onChange","update","add","remove","onClick","Message","Loader","color","radius","stroke","visible","ScrollContainer","TotalSection","GreatBigButton","show","css","Label","Checkout","memo","useDispatch","actions","selectors","total","useMemo","reduce","tot","item","itemValue","Cart","table","Category","thead","Row","tr","isHighlighted","Col","td","Basket","addToOrder","keys","categoryName","j","category","items","categoryLabel","label","colSpan","i","id","price","countValue","count","Math","max","Order","useReducer","oldState","ImageContainer","Image","img","BSCol","BSRow","Products","bootstrap","xs","md","lg","imageUrl","alt","src","Shop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d15de890.chunk.js","sourcesContent":["const errorHandler = err => {\n    return {\n        status: err.response ? err.response.status : err.status,\n        data: err.response ? err.response.data : err.data\n    };\n};\n\nconst responseHandler = (res = {}) => {\n    return {\n        status: res.status,\n        data: res.data\n    };\n};\n\nmodule.exports = { errorHandler, responseHandler };\n","const initialState = {\n    data: {}\n};\n\nexport default initialState;\n","import fetcher from './fetcher';\n\nexport default fetcher;\n","import axios from 'axios';\nimport defaults from './defaults';\n\nconst fetcher = async args => {\n    const {\n        url,\n        data,\n        method = defaults.method,\n        headers = defaults.headers,\n        errorHandler = defaults.errorHandler,\n        responseHandler = defaults.responseHandler\n    } = args;\n    const params = { method, headers, data };\n    let response;\n    try {\n        console.log(params);\n        response = await axios(url, params);\n        return responseHandler(response);\n    } catch (err) {\n        return errorHandler(err);\n    }\n};\n\nexport default fetcher;\n","const types = {\n    SET_USER: 'SET_USER',\n    GET_PRODUCTS_PENDING: 'GET_PRODUCTS_PENDING',\n    GET_PRODUCTS_ERROR: 'GET_PRODUCTS_ERROR',\n    GET_PRODUCTS_SUCCESS: 'GET_PRODUCTS_SUCCESS',\n    CHECKOUT_PENDING: 'CHECKOUT_PENDING',\n    CHECKOUT_ERROR: 'CHECKOUT_ERROR',\n    CHECKOUT_SUCCESS: 'CHECKOUT_SUCCESS'\n};\n\nexport default types;\n","import { fetcher } from '../../../modules';\nimport types from './types';\n\nconst getProducts = () => async (dispatch, getState) => {\n    const {\n        data: { products }\n    } = getState();\n    dispatch({\n        type: types.GET_PRODUCTS_PENDING\n    });\n    const config = {\n        url: `http://localhost:2999/products`,\n        errorHandler: error => {\n            dispatch({\n                type: types.GET_PRODUCTS_ERROR,\n                data: { message: error.message }\n            });\n        },\n        responseHandler: response => {\n            dispatch({\n                type: types.GET_PRODUCTS_SUCCESS,\n                data: { products: response?.data?.products }\n            });\n        }\n    };\n    if (!products) {\n        await fetcher(config);\n    }\n};\n\nconst checkout = orderStatus => async dispatch => {\n    dispatch({\n        type: types.CHECKOUT_PENDING\n    });\n    const config = {\n        url: `http://localhost:2999/billing/checkout`,\n        method: 'POST',\n        data: { orderStatus },\n        errorHandler: error => {\n            dispatch({\n                type: types.CHECKOUT_ERROR,\n                data: { message: error.message }\n            });\n        },\n        responseHandler: response => {\n            dispatch({\n                type: types.CHECKOUT_SUCCESS,\n                data: { products: response?.data?.products }\n            });\n        }\n    };\n    await fetcher(config);\n};\n\nexport { getProducts, checkout };\n","import data from './data';\n\nconst reducers = {\n    data\n};\n\nexport default reducers;\n","import initialState from '../store/initialState';\nimport { types } from '../actions/data';\n\nconst auth = (state = initialState.data, action) => {\n    const { type, data } = action;\n    switch (type) {\n        case types.GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                products: data.products\n            };\n        case types.CHECKOUT_PENDING:\n            return {\n                ...state,\n                isCheckoutPending: true\n            };\n        case types.CHECKOUT_ERROR:\n            return {\n                ...state,\n                isCheckoutCompleted: true,\n                isCheckoutPending: false\n            };\n        case types.CHECKOUT_SUCCESS:\n            return {\n                ...state,\n                isCheckoutCompleted: false,\n                isCheckoutPending: false\n            };\n        default:\n            return state;\n    }\n};\n\nexport default auth;\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nconst slices = combineReducers(reducers);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n          trace: true,\n          traceLimit: 25\n      })\n    : compose;\n\nconst middlewares = [applyMiddleware(thunk)];\n\nconst store = createStore(slices, composeEnhancers(...middlewares));\n\nexport default store;\n","import store from './store';\n\nexport default store;\n","const products = state => state.data.products;\n\nconst isCheckoutPending = state => state.data.isCheckoutPending;\n\nexport { products, isCheckoutPending };\n","import { useSelector as useReactReduxSelector } from 'react-redux';\nimport { isEqual } from 'lodash';\n\nconst useSelector = (fn, rerenderOnChange = true) => {\n    const equalityFn = rerenderOnChange ? isEqual : () => true;\n    return useReactReduxSelector(fn, equalityFn);\n};\n\nexport { useSelector };\n","import store from './store';\nimport { useDispatch } from 'react-redux';\nimport * as selectors from './selectors';\nimport * as actions from './actions';\nimport { useSelector } from './custom-hooks';\n\nexport default store;\n\nexport { useDispatch, actions, useSelector, selectors };\n","const request = require('request');\n\nconst services = [\n    {\n        name: 'data-service',\n        endpoint: 'http://127.0.0.1:2999/health',\n        maxRetries: 10\n    }\n    // add other services here to perform healthchecks\n];\nconst servicesHealthcheck = async () => {\n    const checks = await Promise.allSettled(\n        services.map(service => {\n            const { name, endpoint, maxRetries } = service;\n            return new Promise((resolve, reject) => {\n                let triesCount = 1;\n                const check = setInterval(() => {\n                    request(endpoint, (error, response, body) => {\n                        if (!error && response.statusCode === 200) {\n                            resolve({ [name]: { endpoint, running: true } });\n                            clearInterval(check);\n                        }\n                        if (triesCount === maxRetries) {\n                            reject({ [name]: { endpoint, running: false } });\n                        }\n                        triesCount++;\n                    });\n                }, 1000);\n            });\n        })\n    );\n    const healthy = Object.values(checks).every(c => c.status === 'fulfilled');\n    return healthy;\n};\n\nexport default servicesHealthcheck;\n","import { useState, useEffect } from 'react';\nimport { servicesHealthcheck } from '../utils';\n\nconst useHealthCheck = () => {\n    const [isHealthy, setIsHealthy] = useState(false);\n    useEffect(() => {\n        async function healthCheck() {\n            const result = await servicesHealthcheck();\n            setIsHealthy(result);\n        }\n        healthCheck();\n    }, []);\n    return isHealthy;\n};\n\nexport default useHealthCheck;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    position: relative;\n    display: flex;\n    padding: 16px;\n    background-color: #6b5b95;\n`;\n\nconst Title = styled.div`\n    margin: auto;\n    color: white;\n`;\n\nexport { Container, Title };\n","import PropTypes from 'prop-types';\nimport { Container, Title } from './styledComponents';\n\nconst Header = props => {\n    const { title } = props;\n    return (\n        <Container className=\"header\">\n            <Title className=\"title\">{title}</Title>\n        </Container>\n    );\n};\n\nHeader.displayName = 'Header';\n\nHeader.defaultProps = {};\n\nHeader.propTypes = {\n    title: PropTypes.string\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    display: flex;\n`;\n\nconst Button = styled.button`\n    border: none;\n    height: 32px;\n    width: 32px;\n    border-radius: 8px;\n    :hover,\n    :active {\n        background-color: rgba(0, 0, 0, 0.15);\n    }\n`;\n\nconst Value = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0 4px;\n`;\n\nexport { Container, Button, Value };\n","import PropTypes from 'prop-types';\nimport { Container, Button, Value } from './styledComponents';\n\nconst Counter = props => {\n    const { value, onChange } = props;\n    const update = action => () => {\n        const map = {\n            add: value + 1,\n            remove: value - 1\n        };\n        onChange(map[action]);\n    };\n    return (\n        <Container>\n            <Button {...{ onClick: update('remove') }}>-</Button>\n            <Value>{value}</Value>\n            <Button {...{ onClick: update('add') }}>+</Button>\n        </Container>\n    );\n};\n\nCounter.displayName = 'Counter';\n\nCounter.defaultProps = {};\n\nCounter.propTypes = {\n    value: PropTypes.number,\n    onChange: PropTypes.func\n};\n\nexport default Counter;\n","import Counter from './Counter';\n\nexport default Counter;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    .react-spinner-material {\n        margin: auto;\n    }\n`;\n\nconst Message = styled.div`\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    top: calc(50% + 40px);\n`;\n\nexport { Container, Message };\n","import PropTypes from 'prop-types';\nimport Spinner from 'react-spinner-material';\nimport { Container, Message } from './styledComponents';\n\nconst Loader = props => {\n    const { color, message } = props;\n    return (\n        <Container className=\"loader\">\n            <Spinner {...{ radius: 40, color, stroke: 5, visible: true }} />\n            {message && <Message>{message}</Message>}\n        </Container>\n    );\n};\n\nLoader.displayName = 'Loader';\n\nLoader.defaultProps = {\n    color: 'orange'\n};\n\nLoader.propTypes = {\n    color: PropTypes.string,\n    message: PropTypes.string\n};\n\nexport default Loader;\n","import Loader from './Loader';\n\nexport default Loader;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst ScrollContainer = styled.div`\n    position: relative;\n    height: 100%;\n    overflow-y: auto;\n`;\n\nexport { Container, ScrollContainer };\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst TotalSection = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 16px;\n`;\n\nconst GreatBigButton = styled.button`\n    position: relative;\n    background-color: #ff7b25;\n    color: white;\n    height: 0;\n    bottom: -8px;\n    border: none;\n    ${props => {\n        const { show } = props;\n        return css`\n            ${show &&\n            css`\n                height: 56px;\n                bottom: 0px;\n            `}\n            transition: height .3s ease-in-out, transform .3s ease-in-out;\n        `;\n    }};\n`;\n\nconst Label = styled.div`\n    font-weight: 600;\n`;\n\nexport { Container, TotalSection, GreatBigButton, Label };\n","import { useMemo, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, actions, selectors, useSelector } from '../../../redux';\nimport Loader from '../../../ui-core/Loader';\nimport {\n    Container,\n    TotalSection,\n    GreatBigButton,\n    Label\n} from './styledComponents';\n\nconst Checkout = memo(props => {\n    const { orderStatus } = props;\n    const dispatch = useDispatch();\n    const {\n        data: { checkout }\n    } = actions;\n    const { data: dataSelectors } = selectors;\n    const isCheckoutPending = useSelector(dataSelectors.isCheckoutPending);\n    const total = useMemo(() => {\n        if (!orderStatus) {\n            return 0;\n        }\n        return Object.values(orderStatus).reduce((tot, item) => {\n            const { itemValue } = item;\n            return tot + itemValue;\n        }, 0);\n    }, [orderStatus]);\n\n    const onCheckout = () => {\n        dispatch(checkout(orderStatus));\n    };\n    return (\n        <Container className=\"checkout\">\n            <TotalSection className=\"total-section\">\n                <Label>Total</Label>\n                <Label>${total}.00</Label>\n            </TotalSection>\n            <GreatBigButton\n                className=\"great-big-button\"\n                {...{ show: !!total, onClick: onCheckout }}\n            >\n                {isCheckoutPending ? (\n                    <Loader\n                        {...{ color: 'white', message: 'loading products...' }}\n                    />\n                ) : (\n                    'Checkout'\n                )}\n            </GreatBigButton>\n        </Container>\n    );\n});\n\nCheckout.displayName = 'Checkout';\n\nCheckout.defaultProps = {};\n\nCheckout.propTypes = {\n    orderStatus: PropTypes.object\n};\n\nexport default Checkout;\n","import Checkout from './Checkout';\n\nexport default Checkout;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst Cart = styled.table`\n    margin-top: 8px;\n    position: relative;\n    width: 100%;\n`;\n\nconst Category = styled.thead`\n    font-weight: 600;\n    height: 32px;\n    padding: 0 8px;\n    display: flex;\n    border-bottom: solid 1px lightgrey;\n`;\n\nconst Row = styled.tr`\n    display: flex;\n    padding: 16px 0;\n    border-radius: 6px;\n    margin: 4px;\n    ${props => {\n        const { isHighlighted } = props;\n        return (\n            isHighlighted &&\n            css`\n                background-color: rgba(254, 178, 54, 0.5);\n                transition: background-color 0.3s ease;\n            `\n        );\n    }}\n`;\nconst Col = styled.td`\n    padding: 0 4px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    &.counter {\n        width: 25%;\n    }\n    &.item-label {\n        width: 65%;\n    }\n    &.price {\n        width: 10%;\n        padding: 0;\n    }\n`;\n\nexport { Container, Cart, Category, Row, Col };\n","import PropTypes from 'prop-types';\nimport { Container, Cart, Category, Row, Col } from './styledComponents';\nimport { Counter } from '../../../ui-core';\n\nconst Basket = props => {\n    const { products, orderStatus, addToOrder } = props;\n    return (\n        <Container className=\"basket\">\n            {Object.keys(products).map((categoryName, j) => {\n                const category = products[categoryName];\n                const { items, label: categoryLabel } = category;\n                return (\n                    <Cart key={j}>\n                        <Category>\n                            <tr>\n                                <td colSpan={3}>{categoryLabel}</td>\n                            </tr>\n                        </Category>\n                        <tbody className=\"category\">\n                            {items.map((item, i) => {\n                                const { name, id, price } = item;\n                                const { countValue = 0, itemValue = 0 } =\n                                    orderStatus[id] || {};\n                                const onChange = count =>\n                                    addToOrder({\n                                        [id]: {\n                                            countValue: Math.max(0, count),\n                                            itemValue:\n                                                price * Math.max(0, count)\n                                        }\n                                    });\n                                return (\n                                    <Row\n                                        key={i}\n                                        className=\"order-row\"\n                                        {...{ isHighlighted: countValue }}\n                                    >\n                                        <Col className=\"label counter\">\n                                            <Counter\n                                                {...{\n                                                    value: countValue,\n                                                    onChange\n                                                }}\n                                            />\n                                        </Col>\n                                        <Col className=\"label item-label\">\n                                            <div>{name}</div>\n                                        </Col>\n                                        <Col className=\"label price\">\n                                            <div>${itemValue}</div>\n                                        </Col>\n                                    </Row>\n                                );\n                            })}\n                        </tbody>\n                    </Cart>\n                );\n            })}\n        </Container>\n    );\n};\n\nBasket.displayName = 'Basket';\n\nBasket.propTypes = {\n    products: PropTypes.object\n};\n\nexport default Basket;\n","import Basket from './Basket';\n\nexport default Basket;\n","import { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, ScrollContainer } from './styledComponents';\nimport Checkout from './Checkout';\nimport { Header } from '../../ui-core';\nimport Basket from './Basket';\n\nconst Order = props => {\n    const { products } = props;\n    const [orderStatus, addToOrder] = useReducer((oldState, update) => {\n        if (update) {\n            return {\n                ...oldState,\n                ...update\n            };\n        }\n        return undefined;\n    }, {});\n    return (\n        <Container className=\"order\">\n            <Header {...{ title: 'Order' }} />\n            <ScrollContainer className=\"scroll-container\">\n                <Basket {...{ products, orderStatus, addToOrder }} />\n            </ScrollContainer>\n            <Checkout {...{ orderStatus }} />\n        </Container>\n    );\n};\n\nOrder.displayName = 'Order';\n\nOrder.propTypes = {\n    products: PropTypes.object\n};\n\nexport default Order;\n","import Order from './Order';\n\nexport default Order;\n","import styled from 'styled-components';\nimport { Col, Row } from 'react-bootstrap';\n\nconst Container = styled.div`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    border-right: solid 1px grey;\n`;\n\nconst ScrollContainer = styled.div`\n    position: relative;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n`;\n\nconst Category = styled.thead`\n    font-weight: 600;\n`;\n\nconst ImageContainer = styled.div`\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    box-sizing: border-box;\n    width: 100%;\n    border-radius: 6px;\n    padding: 8px;\n    :hover {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n`;\n\nconst Image = styled.img`\n    width: inherit;\n    margin: auto;\n    border-radius: 6px;\n`;\n\nconst BSCol = styled(Col)`\n    flex-grow: 0;\n    margin: 24px 0;\n    display: flex;\n    justify-content: flex-start;\n`;\n\nconst BSRow = styled(Row)``;\n\nconst Label = styled.div`\n    text-align: center;\n`;\n\nexport {\n    ImageContainer,\n    Container,\n    Category,\n    Image,\n    BSCol,\n    BSRow,\n    Label,\n    ScrollContainer\n};\n","import PropTypes from 'prop-types';\nimport { Container as BSContainer } from 'react-bootstrap';\nimport { Header } from '../../ui-core';\nimport {\n    ImageContainer,\n    Container,\n    ScrollContainer,\n    Category,\n    Image,\n    BSCol,\n    BSRow,\n    Label\n} from './styledComponents';\n\nconst Products = props => {\n    const { products } = props;\n    const bootstrap = {\n        xs: 6,\n        md: 4,\n        lg: 3\n    };\n    return (\n        <Container className=\"products\">\n            <Header {...{ title: 'Products' }} />\n            <ScrollContainer className=\"product-grid\">\n                {Object.keys(products).map((categoryName, j) => {\n                    const category = products[categoryName];\n                    const { items, label: categoryLabel } = category;\n                    return (\n                        <BSContainer key={j}>\n                            <Category className=\"category\">\n                                {categoryLabel}\n                            </Category>\n                            <BSRow>\n                                {items.map((item, i) => {\n                                    const { name, price, imageUrl } = item;\n                                    return (\n                                        <BSCol key={i} {...bootstrap}>\n                                            <ImageContainer>\n                                                <Image\n                                                    alt={name}\n                                                    src={imageUrl}\n                                                />\n                                                <Label>{name}</Label>\n                                                <Label className=\"price\">\n                                                    ${price}\n                                                </Label>\n                                            </ImageContainer>\n                                        </BSCol>\n                                    );\n                                })}\n                            </BSRow>\n                        </BSContainer>\n                    );\n                })}\n            </ScrollContainer>\n        </Container>\n    );\n};\n\nProducts.displayName = 'Products';\n\nProducts.propTypes = {\n    products: PropTypes.object\n};\n\nexport default Products;\n","import Products from './Products';\n\nexport default Products;\n","import styled from 'styled-components';\nimport { Col, Row } from 'react-bootstrap';\n\nconst Container = styled.div`\n    display: flex;\n    height: 100%;\n    overflow: auto;\n`;\n\nconst BSCol = styled(Col)`\n    padding: 0%;\n    overflow: hidden;\n    height: 100%;\n`;\n\nconst BSRow = styled(Row)`\n    border: solid 1px grey;\n    height: 100%;\n`;\n\nexport { Container, BSCol, BSRow };\n","import { useEffect } from 'react';\nimport { Container as BSContainer } from 'react-bootstrap';\nimport { useDispatch, actions, useSelector, selectors } from '../../redux';\nimport { Order, Products } from '../../features';\nimport { Loader } from '../../ui-core';\nimport { Container, BSCol, BSRow } from './styledComponents';\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n    const {\n        data: { getProducts }\n    } = actions;\n    const { data: dataSelectors } = selectors;\n    const products = useSelector(dataSelectors.products);\n    useEffect(() => {\n        dispatch(getProducts());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [products]);\n\n    return products ? (\n        <Container>\n            <BSContainer>\n                <BSRow>\n                    <BSCol {...{ md: 12, lg: 8 }}>\n                        <Products {...{ products }} />\n                    </BSCol>\n                    <BSCol {...{ md: 12, lg: 4 }}>\n                        <Order {...{ products }} />\n                    </BSCol>\n                </BSRow>\n            </BSContainer>\n        </Container>\n    ) : (\n        <Loader {...{ message: 'loading products...' }} />\n    );\n};\n\nShop.displayName = 'Shop';\n\nShop.defaultProps = {};\n\nShop.propTypes = {};\n\nexport default Shop;\n","import Shop from './Shop';\n\nexport default Shop;\n","import useHealthCheck from './hooks/use-health-check';\nimport { Loader } from './ui-core';\nimport { Shop } from './features';\n\nfunction App() {\n    const isHealthy = useHealthCheck();\n    return (\n        <div id=\"app\">\n            {isHealthy ? (\n                <Shop />\n            ) : (\n                <Loader\n                    {...{ color: '#6b5b95', message: 'checking services...' }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './roboto.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","const { errorHandler, responseHandler } = require('./handlers');\n\nconst defaults = {\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    method: 'GET',\n    errorHandler,\n    responseHandler\n};\n\nmodule.exports = defaults;\n"],"sourceRoot":""}